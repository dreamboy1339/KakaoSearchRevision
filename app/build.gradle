plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}
/**
 * Hide API keys
 */
//Properties properties = new Properties()
//properties.load(project.rootProject.file('key.api.properties').newDataInputStream())
//def kakaoApiKey = properties.getProperty('kakao.api.key')
//def kakaoApiKeyRelease = properties.getProperty('kakao.api.key.release')

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.gunt.kakaosearchrevision"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.gunt.kakaosearchrevision.CustomTestRunner"
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    buildTypes {
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "KAKAO_KEY", "1fe389788445df1b30ea282e189c07ed"
//            buildConfigField "String", "KAKAO_KEY", "${kakaoApiKey}"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "KAKAO_KEY", "1fe389788445df1b30ea282e189c07ed"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        def kotlin_compiler_version = "1.4.21"
        kotlinCompilerVersion kotlin_compiler_version

        def kotlin_compiler_extension_version = "1.0.0-alpha05"
        kotlinCompilerExtensionVersion kotlin_compiler_extension_version
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

dependencies {
    //hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
    def hiltVersion = "2.28-alpha"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kaptAndroidTest "androidx.hilt:hilt-compiler:1.0.0-alpha01"

    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"

//    // Room components
//    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
//    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
//    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"

    // gson
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.gsonVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"


    // RX
    //rxjava
    implementation "io.reactivex.rxjava3:rxjava:$rootProject.rxJavaVersion"
    //rxkotlin
    implementation "io.reactivex.rxjava3:rxkotlin:$rootProject.rxKotlinVersion"
    //rxAndroid
    implementation "io.reactivex.rxjava3:rxandroid:$rootProject.rxAndroidVersion"
    //rx view binding
    implementation "com.jakewharton.rxbinding4:rxbinding:$rootProject.rxBindingVersion"


    // glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt "com.github.bumptech.glide:compiler:4.11.0"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Swipe Refresh Layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"


    // Testing
    // Junit
    // Core library
    androidTestImplementation "androidx.test:core:$rootProject.junitRunnerVersion"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$rootProject.junitRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.junitRunnerVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutinesVersion"
    testImplementation "com.google.truth:truth:1.0"

    // Androidx Test
    androidTestImplementation("androidx.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:2.0'

    debugImplementation "androidx.fragment:fragment-testing:$rootProject.testFragmentVersion"
    testImplementation 'org.mockito:mockito-inline:2.21.0'
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.robolectric:robolectric:4.2.1"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

}
